{
	"info": {
		"_postman_id": "c5f5e542-a5ff-4e46-8756-f5f30d3304aa",
		"name": "PET-Store-Swagger",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16179510"
	},
	"item": [
		{
			"name": "POST-place-pet-order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"Response body match test data\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).to.eql(15555);",
							"  pm.expect(jsonData.quantity).to.eql(2);",
							"  pm.expect(jsonData.shipDate).to.be.a(\"string\");",
							"  pm.expect(jsonData.status).to.eql('placed')",
							"  pm.expect(jsonData.complete).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 15555,\n  \"petId\": 10,\n  \"quantity\": 2,\n  \"shipDate\": \"2023-05-17T09:35:03.447Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}store/order",
					"host": [
						"{{BASE_URL}}store"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET-pet-order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"Response body match test data\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).to.eql(4);",
							"  pm.expect(jsonData.petId).to.eql(8);",
							"  pm.expect(jsonData.shipDate).to.eql(\"2023-05-09T09:58:54.395+0000\");",
							"  pm.expect(jsonData.status).to.eql('placed')",
							"  pm.expect(jsonData.complete).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}store/order/4",
					"host": [
						"{{BASE_URL}}store"
					],
					"path": [
						"order",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET-pet-inventory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"Response body match type of the data\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.sold).to.be.an(\"number\");",
							"  pm.expect(jsonData.hungry).to.be.an(\"number\");",
							"  pm.expect(jsonData.string).to.be.an(\"number\");",
							"  pm.expect(jsonData.unavailable).to.be.an(\"number\");",
							"  pm.expect(jsonData.pending).to.be.an(\"number\");",
							"  pm.expect(jsonData.available).to.be.an(\"number\");",
							"  pm.expect(jsonData[\"ready to deliver\"]).to.be.an(\"number\");",
							"  pm.expect(jsonData[\"ready for inventory\"]).to.be.an(\"number\");",
							"  pm.expect(jsonData.peric).to.be.an(\"number\");",
							"  pm.expect(jsonData.Pending).to.be.an(\"number\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 15555,\n  \"petId\": 0,\n  \"quantity\": 2,\n  \"shipDate\": \"2023-05-17T09:35:03.447Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}store/inventory",
					"host": [
						"{{BASE_URL}}store"
					],
					"path": [
						"inventory"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET-pet-order-failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(404);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"Response body match test data\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.type).to.eql(\"error\");",
							"  pm.expect(jsonData.message).to.eql(\"Order not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 15555,\n  \"petId\": 0,\n  \"quantity\": 2,\n  \"shipDate\": \"2023-05-17T09:35:03.447Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}store/order/10",
					"host": [
						"{{BASE_URL}}store"
					],
					"path": [
						"order",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST-place-pet-order-empty-body-failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(415);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"Response body match test data\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.type).to.eql(\"unknown\");",
							"  pm.expect(jsonData.message).to.contain(\"com.sun.jersey.api.MessageException\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}store/order",
					"host": [
						"{{BASE_URL}}store"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST-place-pet-order-invalid-failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(500);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"Response body match test data\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.type).to.eql(\"unknown\");",
							"  pm.expect(jsonData.message).to.eql(\"something bad happened\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"aaaaa\",\n  \"petId\": 0,\n  \"quantity\": 2,\n  \"shipDate\": \"2023-05-17T09:35:03.447Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}store/order",
					"host": [
						"{{BASE_URL}}store"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		}
	]
}